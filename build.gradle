plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.rct.humanresources'
version = '0.0.1-SNAPSHOT'
description = "Spring - WebFlux - Human Resources Apllication Template"

ext {
	blockHoundVersion = '1.0.8.RELEASE'
	jetBrainsAnnotationsVersion = '24.1.0'
	logbackVersion = '1.5.0'
	lombokVersion = '1.18.30'
	mapStructVersion = '1.5.5.Final'
	reactorVersion = '3.6.3'
	sl4jVersion = '2.0.12'
	springBootVersion = '3.2.2'
	springContextVersion = '6.1.3'
	springCoreVersion = '6.1.3'
	springDocOpenApiVersion = '1.7.0'
	springMongoReactiveVersion = '3.2.2'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorPath = configurations.annotationProcessor
}

javadoc{
	destinationDir = file("${projectDir}/build/docs/javadoc")
	exclude("com.rct.core.service")
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
	mavenCentral()
}

dependencies {

	implementation "org.springframework:spring-context:${springContextVersion}"
	implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb-reactive:${springMongoReactiveVersion}"
	implementation "org.jetbrains:annotations:${jetBrainsAnnotationsVersion}"
	implementation "org.mapstruct:mapstruct:${mapStructVersion}"
	implementation("org.springdoc:springdoc-openapi-webflux-ui:${springDocOpenApiVersion}")

	implementation("io.projectreactor:reactor-tools:${reactorVersion}")
	implementation("org.slf4j:slf4j-api:${sl4jVersion}")
	implementation("io.projectreactor.tools:blockhound:${blockHoundVersion}")
	implementation("ch.qos.logback:logback-core:${logbackVersion}")


	compileOnly "org.projectlombok:lombok:${lombokVersion}"

	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct:${mapStructVersion}"

	testImplementation("io.projectreactor.tools:blockhound-junit-platform:${blockHoundVersion}")
	testImplementation "io.projectreactor:reactor-test:${reactorVersion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
	testImplementation("ch.qos.logback:logback-classic:${logbackVersion}")

}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(Test).configureEach {
	if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_21)) {
		jvmArgs += [
				"-XX:+AllowRedefinitionToAddDeleteMethods"
		]
	}
}

